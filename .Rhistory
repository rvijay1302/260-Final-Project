new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
# wrangling the rest
wrangling_pdf <- function(n, month) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)  %>%
select(-new_table[[month]])
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
# wrangling the rest
wrangling_pdf <- function(n, month) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
View(APR)
# wrangling the rest
wrangling_pdf <- function(n, month) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-new_table[[month]])
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
# wrangling the rest
wrangling_pdf <- function(n, month) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]")
return(new_table)
}
# wrangling the rest
wrangling_pdf <- function(n, month) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]")
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
#additional wrangling for DEC
DEC <- DEC %>%  mutate (Diff.= Y2017, Y2017= NA) %>% filter (Y2015 != "2")
#additional wrangling for OCT
OCT <- OCT %>%  mutate(OCT= as.numeric(OCT)) %>%  filter (!is.na(OCT))
# wrangling the rest
wrangling_pdf <- function(n, month1) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]") %>%  mutate(month = month1)
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
#additional wrangling for DEC
DEC <- DEC %>%  mutate (Diff.= Y2017, Y2017= NA) %>% filter (Y2015 != "2")
#additional wrangling for OCT
OCT <- OCT %>%  mutate(OCT= as.numeric(OCT)) %>%  filter (!is.na(OCT))
# List of your dataframes (replace df_OCT, df_NOV, etc. with actual dataframes)
df_list <- list(SEP, OCT, NOV, DEC, JAN, FEB, MAR, APR,
MAY, JUN, JUL, AGO)
# List of corresponding month names
month_names <- c("September", "October", "November", "December", "January", "February",
"March", "April", "May", "June", "July", "August")
# Combine dataframes into one and add the 'month' column
all_data <- map2_dfr(df_list, month_names, ~mutate(.x, month = .y))
View(all_data)
OCT <- OCT %>% mutate(month = "October")
NOV <- NOV %>% mutate(month = "November")
DEC <- DEC %>% mutate(month = "December")
JAN <- JAN %>% mutate(month = "January")
FEB <- FEB %>% mutate(month = "February")
MAR <- MAR %>% mutate(month = "March")
APR <- APR %>% mutate(month = "April")
MAY <- MAY %>% mutate(month = "May")
JUN <- JUN %>% mutate(month = "June")
JUL <- JUL %>% mutate(month = "July")
AGO <- AGO %>% mutate(month = "August")
SEP <- SEP %>% mutate(month = "September")
# Combine all dataframes into one big dataframe
all_data <- bind_rows(SEP, OCT, NOV, DEC, JAN, FEB, MAR, APR,
MAY, JUN, JUL, AGO)
View(all_data)
View(all_data)
all_data <- all_data  %>%
group_by(month) %>%  mutate(n=n()) %>% ungroup() %>%
select (Y2015, Y2016, Y2017, Diff., month)
View(all_data)
View(DEC)
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
# wrangling the rest
wrangling_pdf <- function(n, month1) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]") %>%  mutate(month = month1)
return(new_table)
}
#wrangling other months
months <- c("OCT", "NOV", "DEC", "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AGO")
numbers <- 2:12
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
# wrangling the rest
wrangling_pdf <- function(n, month1) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]")
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
temp_file <- tempfile()
url <- paste0("https://github.com/c2-d2/pr_mort_official/raw/master/data/Mortalidad-RegDem-2015-17-NYT-part1.pdf")
download.file(url, temp_file, mode = "wb")
txt <- pdf_text(temp_file)
file.remove(temp_file)
# wrangling the rest
wrangling_pdf <- function(n, month1) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]")
return(new_table)
}
#wrangling other months
months <- c("OCT", "NOV", "DEC", "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AGO")
numbers <- 2:12
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
# wrangling the rest
wrangling_pdf <- function(n, month) {
page <- txt[n]
split_lines <- str_split(page, "\n+")[[1]]
header_line <- split_lines[3]
the_month <- header_line %>%
str_trim() %>%
str_replace_all(",\\s.", "") %>%
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%
str_trim() %>%
str_split("\\s+", simplify = TRUE)
if (nrow(header) < 2 || ncol(header) < 4) {
stop("Header parsing failed: Ensure input format matches expectations.")
}
the_names <- c(header[1, 1], header[1, 2], header[1, 3], header[1, 4], header[2, 1])
new_table <- split_lines[4:43] %>%
str_trim() %>%
str_split("\\s{2,}", simplify = TRUE) %>%
data.frame(stringsAsFactors = FALSE) %>%
setNames(the_names)
colnames(new_table) <- str_replace_all(colnames(new_table), "\\*", "")
selected_columns <- c(month, "Y2015", "Y2016", "Y2017", "Diff.")
new_table <- new_table %>%
select(all_of(selected_columns)) %>%
filter(Y2017 != "", Y2016 != "")
new_table <- new_table %>%
filter(!is.na(new_table[[month]])) %>%  # Remove rows with NA in the 'month' column
filter(!str_detect(new_table[[month]], "Total|Avg"))
new_table <- new_table %>%
distinct(new_table[[month]], .keep_all = TRUE)
new_table <- new_table %>%  select(-"new_table[[month]]")
return(new_table)
}
sapply(1:length(months), function(i) {
result <- wrangling_pdf(numbers[i], months[i])
assign(months[i], result, envir = .GlobalEnv)
})
View(DEC)
#additional wrangling for DEC
DEC <- DEC %>%  mutate (Diff.= Y2017, Y2017= NA)
View(DEC)
#additional wrangling for OCT
OCT <- OCT %>%  mutate(OCT= as.numeric(OCT)) %>%  filter (!is.na(OCT))
OCT <- OCT %>% mutate(month = "October")
NOV <- NOV %>% mutate(month = "November")
DEC <- DEC %>% mutate(month = "December")
JAN <- JAN %>% mutate(month = "January")
FEB <- FEB %>% mutate(month = "February")
MAR <- MAR %>% mutate(month = "March")
APR <- APR %>% mutate(month = "April")
MAY <- MAY %>% mutate(month = "May")
JUN <- JUN %>% mutate(month = "June")
JUL <- JUL %>% mutate(month = "July")
AGO <- AGO %>% mutate(month = "August")
SEP <- SEP %>% mutate(month = "September")
#wrangling sep
SEP <- wrangling_sep(1, "SEP")
wrangling_sep <- function(n, month) {
page <- txt[n]
tab <- str_split(page, "\n+")
tab <- tab[[1]]
first_line <- tab[3]
first_line
the_month <- first_line %>%   str_trim() |>
str_replace_all(",\\s.", "") |>
str_split("\\s{2,}", simplify = TRUE)
header <- the_month[1:2] %>%  str_trim() |>
str_split("\\s+", simplify = TRUE)
header
the_names <- c(header[1,1], header[2,1], header[2,2], header[2,3], "Diff.")
new_table <- tab[4:37] |>
str_trim() |>
str_split("\\s{2,}", simplify = TRUE) |>
data.frame() |>
setNames(the_names)
new_table
new_table <- new_table %>% select(c("SEP", "Y2015", "Y2016", "Y2017", "Diff.")) %>%
filter(Y2015 != "" ,Y2015 != "Y2015")
return (new_table) }
#wrangling sep
SEP <- wrangling_sep(1, "SEP")
OCT <- OCT %>% mutate(month = "October")
NOV <- NOV %>% mutate(month = "November")
DEC <- DEC %>% mutate(month = "December")
JAN <- JAN %>% mutate(month = "January")
FEB <- FEB %>% mutate(month = "February")
MAR <- MAR %>% mutate(month = "March")
APR <- APR %>% mutate(month = "April")
MAY <- MAY %>% mutate(month = "May")
JUN <- JUN %>% mutate(month = "June")
JUL <- JUL %>% mutate(month = "July")
AGO <- AGO %>% mutate(month = "August")
SEP <- SEP %>% mutate(month = "September")
all_data <- bind_rows(SEP, OCT, NOV, DEC, JAN, FEB, MAR, APR,
MAY, JUN, JUL, AGO)
View(all_data)
all_data <- all_data  %>%
group_by(month) %>%  mutate(n=n()) %>% ungroup() %>%
select (Y2015, Y2016, Y2017, Diff., month)
View(all_data)
all_data <- all_data  %>%
group_by(month) %>%  mutate(day=row_number()) %>% ungroup() %>%
select (Y2015, Y2016, Y2017, Diff., month)
View(all_data)
all_data <- all_data  %>% group_by(month) %>%  mutate(day=row_number()) %>% ungroup() %>%
select (Y2015, Y2016, Y2017, Diff., month, day)
View(all_data)
save(nytimes_table, file = "data/ny_times.RData")
save(nytimes_table, file = "data/pdf_wrangle.RData")
nytimes_table <- all_data
save(nytimes_table, file = "data/pdf_wrangle.RData")
save(nytimes_table, file = "data/nytimes_table.RData")
setwd("~/260-Final-Project")
save(nytimes_table, file = "data/nytimes_table.RData")
