---
title: "supp_materials"
format: pdf
execute: 
  echo: false
---

```{r}
library(tidyverse)
library(knitr)
library(patchwork)
load("../data/excess_mort.RData")
nytimes <- load("../data/nytimes_table.RData")
```

### 1A

```{r}
avg_pop_2002 <- weekly_counts |>
  filter(year(date) == 2002) |>
  group_by(sex, agegroup) |>
  summarize(population = mean(population)) |>
  ungroup()
  
avg_pop_2016 <- weekly_counts |>
  filter(year(date) == 2016) |>
  group_by(sex, agegroup) |>
  summarize(population = mean(population)) |>
  ungroup()

plot_2002 <- avg_pop_2002 |> 
  ggplot(aes(x = ifelse(sex == "male", -population, population), 
                     y = agegroup, 
                     fill = sex)) + 
  geom_bar(stat = "identity", show.legend = FALSE) +
  scale_x_continuous(labels = abs) +
  xlab("Population") +
  ylab("Age Group") +
  labs(title = "Population 2002")
  


plot_2016 <- avg_pop_2016 |> 
  ggplot(aes(x = ifelse(sex == "male", -population, population), 
                     y = agegroup, 
                     fill = sex)) + 
  geom_bar(stat = "identity") +
  scale_x_continuous(labels = abs) +
  theme(axis.title.y = element_blank())+
  labs(title = "Population 2016") +
  xlab("Population") 
  

plot_2002 + plot_2016
```

### 2A

```{r}
weekly_counts |>
  filter(year(date) < 2017) |>
  group_by(date, agegroup) |>
  summarize(rate = mean(rate, na.rm = TRUE),
            .groups = "drop") |>
  ggplot(aes(x = date, y = rate)) +
  geom_line() +
  facet_wrap(~ agegroup)
```

### 2B

```{r}
weekly_counts |>
  filter((year(date) < 2017) & (agegroup %in% c("0-4", "5-9", "10-14"))) |>
  group_by(date, agegroup) |>
  summarize(rate = mean(rate, na.rm = TRUE),
            .groups = "drop") |>
  ggplot(aes(x = date, y = rate)) +
  geom_line() +
  facet_wrap(~ agegroup)
```

### 2C

```{r}
weekly_counts |>
  filter(year(date) < 2017) |>
  group_by(date, sex) |>
  summarize(rate = mean(rate, na.rm = TRUE),
            .groups = "drop") |>
  ggplot(aes(x = date, y = rate)) +
  geom_line() +
  facet_wrap(~ sex)
```

### 2D

```{r}
weekly_counts_combined <- weekly_counts |>
  filter(year(date) < 2017) |>
  mutate(age_category = case_when(
    agegroup %in% c("75-79", "80-84", "85-Inf") ~ "75-inf",
    agegroup %in% c("55-59", "60-64", "65-69", "70-74") ~ "55-74",
    agegroup %in% c("25-29", "30-34", "35-39", "40-44", "45-49", "50-54") ~ "25-54",
    agegroup %in% c("5-9", "10-14", "15-19", "20-24") ~ "5-24",
    agegroup == "0-4" ~ "0-4"
  )) |>
  group_by(date, sex, age_category, week, day) |>
  summarize(
    outcome = sum(outcome),
    population = sum(population),
    rate = sum(outcome) / sum(population),
    .groups = "drop"
  )

fit <- lm(rate ~ sex + age_category + day + week + age_category:sex + age_category:week, data = weekly_counts_combined)

predictions1 <- predict(fit, newdata = weekly_counts_combined, se.fit = TRUE)

weekly_counts_combined <- weekly_counts_combined %>% 
  mutate(
    exp = predictions1$fit*population,
    se = predictions1$se.fit*population,
    sigma = sd(fit$resid)*population,
    excess = outcome - exp,
    lower = exp - 1.96 * se,
    upper = exp + 1.96 * se,
  )

ggplot(weekly_counts_combined, aes(x = date)) +
  geom_line(aes(y = exp, color = age_category), size = 1) +
  geom_ribbon(aes(ymin = lower, ymax = upper, fill = age_category), alpha = 0.2) +
  facet_grid(age_category ~ sex, scales = "free_y") +
  labs(
    title = "Expected Deaths with 95% Confidence Intervals",
    x = "Date",
    y = "Expected Deaths"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom"
  )
```

### 3A

```{r}
weekly_counts |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line()

weekly_counts_combined |>
  filter(between(date, make_date(2004, 9, 1), make_date(2005, 6, 1))) |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line() +
  ggtitle("Combined Outcomes from September 1, 2004 to June 1, 2005")

weekly_counts |>
  filter(between(date, make_date(2013, 1, 1), make_date(2015, 12, 1))) |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line() +
  ggtitle("Combined Outcomes from January 1, 2013 to December 1, 2015")

weekly_counts |>
  filter(between(date, make_date(2016, 9, 1), make_date(2017, 2, 1))) |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line() +
  ggtitle("Combined Outcomes from September 1, 2016 to February 1, 2017")
```

### 4A

```{r}
weekly_counts_combined_1 <- weekly_counts_combined |>
  filter(
    !(between(date, make_date(2004, 11, 1), make_date(2005, 1, 31)) |
      between(date, make_date(2014, 8, 1), make_date(2015, 2, 28)) |
      between(date, make_date(2016, 11, 1), make_date(2016, 12, 31)))
  )

fit1 <- lm(rate ~ sex + age_category + day + week + age_category:sex + age_category:week, data = weekly_counts_combined_1)

predictions1 <- predict(fit1, newdata = weekly_counts_combined_1, se.fit = TRUE)

weekly_counts_combined_1 <- weekly_counts_combined_1 %>% 
  mutate(
    exp = predictions1$fit*population,
    se = predictions1$se.fit*population,
    sigma = sd(fit$resid)*population,
    excess = outcome - exp,
    lower = exp - 1.96 * se,
    upper = exp + 1.96 * se,
  )

weekly_counts_with_2017 <- weekly_counts |>
  mutate(age_category = case_when(
    agegroup %in% c("75-79", "80-84", "85-Inf") ~ "75-inf",
    agegroup %in% c("55-59", "60-64", "65-69", "70-74") ~ "55-74",
    agegroup %in% c("25-29", "30-34", "35-39", "40-44", "45-49", "50-54") ~ "25-54",
    agegroup %in% c("5-9", "10-14", "15-19", "20-24") ~ "5-24",
    agegroup == "0-4" ~ "0-4"
  )) |>
  group_by(date, sex, age_category, week, day) |>
  summarize(
    outcome = sum(outcome),
    population = sum(population),
    rate = sum(outcome) / sum(population),
    .groups = "drop"
  )

predictions2 <- predict(fit1, newdata = weekly_counts_with_2017, se.fit = TRUE)

weekly_counts_with_2017 <- weekly_counts_with_2017 %>% 
  mutate(
    exp = predictions2$fit*population,
    se = predictions2$se.fit*population,
    sigma = sd(fit$resid)*population,
    excess = outcome - exp,
    lower = exp - 1.96 * se,
    upper = exp + 1.96 * se,
  )

weekly_counts_with_2017 |>
  group_by(date) |>
  filter(year(date) == 2017) |>
  summarize(excess = sum(excess),
            se = sqrt(sum(sigma^2 + se^2)), .groups = "drop") |>
    ggplot(aes(date, excess)) +
    geom_point() +
    geom_hline(yintercept = 0, lty = 2, color = "grey") +
    geom_errorbar(aes(ymin = excess - 1.96*se, ymax = excess + 1.96*se))
```
---

```{r}
library(knitr)
load("../data/excessmort_clean.RData")
library(tidyverse)
data <- load("../data/excessmort_clean.RData")
nytimes <- load ("../data/nytimes_table.RData")
```

### 5A

```{r}
all_data |> ggplot(aes(date, deaths)) + geom_point() + 
  labs(title = "Deaths extracted from PDF shared with NYT", x = "Date", y = "Deaths")
```
### 5B 
```{r}
library(excessmort)
daily_counts <- puerto_rico_counts %>% filter(between(year(date), 2015, 2018))
tmp <- daily_counts |> 
  filter(date > make_date(2015, 1, 1),date < make_date(2017, 10, 20), date <= max(date) - days(45) ) |> 
  group_by(date) %>%
  summarise(deaths = sum(outcome, na.rm = TRUE)) 
tmp %>%
  ggplot(aes(yday(date), deaths, color = date < make_date(2017, 9, 20))) +  
  geom_point(show.legend = FALSE) +
  theme_bw() +
  labs(
    title = "Deaths extracted from excess mort package", 
    subtitle = "Data for days after the hurricane are shown in red", 
    x = "Day of the Year", 
    y = "Deaths"
  )
```
### 5C
```{r}
tmp2 <- all_data %>% mutate(date = floor_date(date, unit = "week", week_start = 3)) |> 
  filter(date <= max(date) - days(45)) %>% 
  group_by(date) |>
  summarize(deaths = sum(deaths), 
            n = n(), .groups = "drop") |>
  filter(n == 7) |>
  select(-n) |>
  mutate(week = epiweek(date)) |>
  mutate(day = difftime(date, min(date), units = "day"),
         week = as.factor(week)) %>%   mutate(dataset= "NY times") 
weekly_edited <- tmp %>% mutate(date = floor_date(date, unit = "week", week_start = 3)) |>
  group_by(date) |>
  summarize(deaths = sum(deaths), 
            n = n(), .groups = "drop") |>
  filter(n == 7) |>
  select(-n) |>
  mutate(week = epiweek(date)) |>
  mutate(day = difftime(date, min(date), units = "day"),
         week = as.factor(week)) %>%  mutate(dataset= "excessmort package")
combined_data <- bind_rows(tmp2,weekly_edited )  
```

### 5D
```{r}
ggplot(combined_data, aes(x = week, y = deaths, fill = dataset)) +
  geom_bar(stat = "identity", position = "dodge") +  # 'dodge' for side-by-side bars
  labs(title = "Total Deaths by Week",
       x = "Week",
       y = "Deaths") +
  theme_bw()
```
### 5E
```{r}
combined_data1 <- merge(tmp2, weekly_edited, by = "date", suffixes = c("_1", "_2"))
ggplot(combined_data1, aes(x = deaths_1, y = deaths_2)) +
  geom_point(aes(color = date)) +
  labs(title = "Comparison of Deaths in Both Datasets",
       x = "Deaths (Dataset 1)",
       y = "Deaths (Dataset 2)") +
  theme_bw()
```
### 5F
```{r}
ggplot(combined_data, aes(x = deaths, fill = dataset)) +
  geom_density(alpha = 0.5) +  # alpha for transparency
  labs(title = "Density Plot of Deaths",
       x = "Deaths",
       y = "Density") +
  theme_bw()
```
### 5G
```{r}
ggplot(combined_data, aes(x = as.factor(week), y = deaths, fill = dataset)) +
  geom_boxplot() +  
  labs(title = "Boxplot of Deaths by Week",
       x = "Week",   
       y = "Deaths") +  
  theme_bw()  

```
