---
title: "final-project"
format: html
editor: visual
---

```{r}
library(readr)
library(tidyverse)
data <- load("data/excessmort_clean.RData")
nytimes <- load ("data/nytimes_table.RData")
```


```{r}
weekly_counts %>% group_by (date,agegroup) %>%
  filter(between(year(date), 2008, 2016)) %>%
  summarise(rate= sum(outcome)/sum(population), .groups = "drop") %>%
   ggplot(aes(x = date, y =rate)) +
  geom_boxplot()+
  facet_wrap(~agegroup)
```


```{r}
fit <- weekly_counts %>%  filter(year(date) < 2017)  %>% 
  lm(rate ~ sex+ agegroup+ day+ week+agegroup*sex, data=.)
summary(fit)
predictions <- predict(fit, newdata = weekly_counts, se.fit = TRUE)
tmp <- weekly_counts %>%  mutate(predicted_outcome= predictions$fit*population, 
                       se= predictions$se.fit*population, 
                       sigma= sd(fit$residuals)*population, excess= outcome-predicted_outcome ) %>% 
  group_by(date) %>% 
  summarize(excess= sum(excess),
            se= sqrt(sum(sigma^2+se^2)), .groups="drop") %>% 
  filter(year(date)>= 2017) %>% 
  ggplot(aes(date, excess))+
  geom_point()+
  geom_hline(yintercept = 0,lty=2, color="grey" )+
  geom_errorbar(aes(ymin=excess-1.96*se, ymax=excess+1.96*se))
tmp
```

```{r}
weekly_counts %>% mutate(predicted_rate= predictions$fit) %>% 
  filter(agegroup %in% c("0-4", "5-9", "10-14", "15-19", "20-24", 
                         "25-29", "30-34", "35-39", "40-44", 
                         "45-49", "50-54"))  %>% 
  ggplot(aes(date, rate)) +
  geom_point() + 
  geom_line(aes(y = predicted_rate), colour="red") + 
  facet_wrap(vars(agegroup, sex)) + 
  labs(
    title = "Observed vs. Predicted Rates Over Time by Age Group and Sex",
    x = "Date",
    y = "Rate") +
  theme_minimal()
```


```{r}

fit1 <- weekly_counts %>%
  filter(between(year(date), 2008, 2016),  agegroup %in% c("0-4", "5-9", "10-14", "15-19", "20-24", "25-29")) %>%
  lm(rate ~ sex+ agegroup + day + week +agegroup*sex, data = .)
weekly_counts1 <- weekly_counts %>%
  filter(agegroup%in% c("0-4", "5-9", "10-14", "15-19", "20-24", 
                         "25-29"))  %>% filter(between(year(date), 2008, 2016))
predictions1 <- predict(fit1, newdata = weekly_counts1, se.fit = TRUE)
weekly_counts1 %>% mutate(predicted_rate= predictions1$fit) %>% 
  ggplot(aes(date, rate)) +
  geom_point() + 
  geom_line(aes(y = predicted_rate), colour="red") + 
  facet_wrap(vars(agegroup, sex), scales = "free_y") + 
  labs(
    title = "Observed vs. Predicted Rates Over Time by Age Group and Sex",
    x = "Date",
    y = "Rate") +
  theme_minimal()

```
```{r}
all_data |> ggplot(aes(date, deaths)) + geom_point() + 
  labs(title = "Deaths extracted from PDF shared with NYT", x = "Date", y = "Deaths")
all_data |> filter(date <= max(date) - days(45)) |>
  ggplot(aes(yday(date), deaths, color = date < make_date(2017, 10, 13))) + 
  geom_point(show.legend = FALSE) +
  theme_bw() +
  labs(title = "Deaths extracted from PDF shared with NYT", 
       subtitle = "Data for days after the hurricane are shown in red", x = "Date", y = "Deaths")
```
```{r}
library(excessmort)
daily_counts <- puerto_rico_counts %>% filter(between(year(date), 2015, 2018))
tmp <- daily_counts |> 
  filter(date > make_date(2015, 1, 1),date < make_date(2017, 10, 20), date <= max(date) - days(45) ) |> 
  group_by(date) %>%
  summarise(deaths = sum(outcome, na.rm = TRUE)) 
tmp %>%
  ggplot(aes(yday(date), deaths, color = date < make_date(2017, 9, 20))) +  
  geom_point(show.legend = FALSE) +
  theme_bw() +
  labs(
    title = "Deaths extracted from excess mort package", 
    subtitle = "Data for days after the hurricane are shown in red", 
    x = "Day of the Year", 
    y = "Deaths"
  )
```

```{r}
tmp2 <- all_data %>% mutate(date = floor_date(date, unit = "week", week_start = 3)) |> 
  filter(date <= max(date) - days(45)) %>% 
  group_by(date) |>
  summarize(deaths = sum(deaths), 
            n = n(), .groups = "drop") |>
  filter(n == 7) |>
  select(-n) |>
  mutate(week = epiweek(date)) |>
  mutate(day = difftime(date, min(date), units = "day"),
         week = as.factor(week)) %>%   mutate(dataset= "NY times") 
weekly_edited <- tmp %>% mutate(date = floor_date(date, unit = "week", week_start = 3)) |>
  group_by(date) |>
  summarize(deaths = sum(deaths), 
            n = n(), .groups = "drop") |>
  filter(n == 7) |>
  select(-n) |>
  mutate(week = epiweek(date)) |>
  mutate(day = difftime(date, min(date), units = "day"),
         week = as.factor(week)) %>%  mutate(dataset= "excessmort package")
combined_data <- bind_rows(tmp2,weekly_edited )  # Combine both datasets

ggplot(combined_data, aes(x = date, y = deaths, color = dataset)) +
  geom_line() + 
  geom_point() +  # Optional: Add points for clarity
  geom_vline(xintercept = as.Date("2017-09-20"), linetype = "dashed", color = "grey", linewidth = 0.8)+
  labs(title = "Deaths Comparison Over Time",
       x = "Date",
       y = "Deaths") +
  theme_minimal()

```
```{r}
ggplot(combined_data, aes(x = week, y = deaths, fill = dataset)) +
  geom_bar(stat = "identity", position = "dodge") +  # 'dodge' for side-by-side bars
  labs(title = "Total Deaths by Week",
       x = "Week",
       y = "Deaths") +
  theme_minimal()
```
```{r}
ggplot(combined_data, aes(x = factor(week), y = deaths, fill = dataset)) +
  geom_boxplot() +
  labs(title = "Distribution of Deaths by Week",
       x = "Week",
       y = "Deaths") +
  theme_minimal()

```
```{r}
combined_data1 <- merge(tmp2, weekly_edited, by = "date", suffixes = c("_1", "_2"))
ggplot(combined_data1, aes(x = deaths_1, y = deaths_2)) +
  geom_point(aes(color = date)) +
  labs(title = "Comparison of Deaths in Both Datasets",
       x = "Deaths (Dataset 1)",
       y = "Deaths (Dataset 2)") +
  theme_minimal()
```
```{r}
ggplot(combined_data, aes(x = deaths, fill = dataset)) +
  geom_density(alpha = 0.5) +  # alpha for transparency
  labs(title = "Density Plot of Deaths",
       x = "Deaths",
       y = "Density") +
  theme_minimal()
```

```{r}
ggplot(combined_data, aes(x = yday(date), y = deaths, color = dataset)) +
  geom_point() +
  facet_wrap(~week) +  # Facet by week (or day, depending on your data)
  labs(title = "Comparison of Deaths by Week",
       x = "Day of Year",
       y = "Deaths") +
  theme_minimal()
```

