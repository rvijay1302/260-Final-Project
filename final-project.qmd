---
title: "final-project"
format: html
editor: visual
---

```{r}
library(tidyverse)
```

```{r}
## 2
# Start with regression model from pset 8, split into age groups based comparable trends. Fit these models and use it to predict mortality.

## 3
# Yearly mortality plot shows excess deaths 2002 - 2008. Remove these years, refit models, and compare predictions. Also, explore weekly effect by splitting by week, refit these models, and compare predictions.

## 4
# Comment on final model, plot excess deaths (related to hurricane).

## 5
# Combine excessmort and NYT data, compute differences, plot stuff.
```

```{r}
weekly_counts |>
  group_by(date, agegroup) |>
  summarize(rate = mean(rate, na.rm = TRUE),
            .groups = "drop") |>
  ggplot(aes(x = date, y = rate)) +
  geom_line() +
  facet_wrap(~ agegroup)
```

```{r}
weekly_counts_combined <- weekly_counts |>
  filter(year(date) < 2017) |>
  mutate(age_category = case_when(
    agegroup %in% c("75-79", "80-84", "85-Inf") ~ "75-inf",
    agegroup %in% c("55-59", "60-64", "65-69", "70-74") ~ "55-74",
    agegroup %in% c("25-29", "30-34", "35-39", "40-44", "45-49", "50-54") ~ "25-54",
    agegroup %in% c("5-9", "10-14", "15-19", "20-24") ~ "5-24",
    agegroup == "0-4" ~ "0-4"
  )) |>
  group_by(date, sex, age_category, week, day) |>
  summarize(
    outcome = sum(outcome),
    population = sum(population),
    rate = sum(outcome) / sum(population),
    .groups = "drop"
  )

fit <- lm(rate ~ sex + age_category + day + week + age_category:sex + age_category:week, data = weekly_counts_combined)

summary(fit)

predictions1 <- predict(fit, newdata = weekly_counts_combined, se.fit = TRUE)

weekly_counts_combined <- weekly_counts_combined %>% 
  mutate(
    exp = predictions1$fit*population,
    se = predictions1$se.fit*population,
    sigma = sd(fit$resid)*population,
    excess = outcome - exp,
    lower = exp - 1.96 * se,
    upper = exp + 1.96 * se,
  )

ggplot(weekly_counts_combined, aes(x = date)) +
  geom_line(aes(y = exp, color = age_category), size = 1) +
  geom_ribbon(aes(ymin = lower, ymax = upper, fill = age_category), alpha = 0.2) +
  facet_grid(age_category ~ sex, scales = "free_y") +
  labs(
    title = "Expected Deaths with 95% Confidence Intervals",
    x = "Date",
    y = "Expected Deaths"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom"
  )
```

```{r}
weekly_counts_combined %>%
  ggplot(aes(x = date)) +
  geom_line(aes(y = outcome, color = sex), alpha = 0.5) +
  geom_line(aes(y = exp, color = sex), linetype = "dashed") +
  facet_wrap(~ age_category, scales = "free_y", ncol = 1) +
  labs(
    title = "Observed vs Predicted Deaths by Age Category and Sex",
    x = "Date",
    y = "Deaths",
    color = "Sex"
  ) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  guides(color = guide_legend(override.aes = list(linetype = c("solid", "dashed")))) +
  annotate("text", x = min(weekly_counts_combined$date), y = Inf, 
           hjust = 0, vjust = 1, label = "Solid: Observed\nDashed: Predicted", 
           size = 3)
```

```{r}
weekly_counts |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line()
```

```{r}
weekly_counts_combined |>
  filter(between(date, make_date(2004, 9, 1), make_date(2005, 6, 1))) |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line()
```

```{r}
weekly_counts |>
  filter(between(date, make_date(2013, 1, 1), make_date(2015, 12, 1))) |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line()
```

```{r}
weekly_counts |>
  filter(between(date, make_date(2016, 9, 1), make_date(2017, 2, 1))) |>
  group_by(date) |>
  summarize(combine_outcome = sum(outcome), .groups = "drop") |>
  ggplot(aes(date, combine_outcome)) +
  geom_line()
```

```{r}
weekly_counts_combined_1 <- weekly_counts_combined |>
  filter(
    !(between(date, make_date(2004, 11, 1), make_date(2005, 1, 31)) |
      between(date, make_date(2014, 8, 1), make_date(2015, 2, 28)) |
      between(date, make_date(2016, 11, 1), make_date(2016, 12, 31)))
  )

fit <- lm(rate ~ sex + age_category + day + week + age_category:sex + age_category:week, data = weekly_counts_combined_1)

summary(fit)

predictions1 <- predict(fit, newdata = weekly_counts_combined_1, se.fit = TRUE)

weekly_counts_combined_1 <- weekly_counts_combined_1 %>% 
  mutate(
    exp = predictions1$fit*population,
    se = predictions1$se.fit*population,
    sigma = sd(fit$resid)*population,
    excess = outcome - exp,
    lower = exp - 1.96 * se,
    upper = exp + 1.96 * se,
  )
```
